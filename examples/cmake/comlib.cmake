# 自封装应用库
MESSAGE (STATUS "comlib set begin")

## 设置自封装应用库的头文件,StiBel三方库是依赖底层的一些库实现的,因此INCLUDE和LIB应该直接包含对应头文件和库文件，避免使用时再包含
SET(COMM_INCLUDE            ${PROJECT_SOURCE_DIR}/include/comlib)
SET(STIBEL_COMMON_INCLUDE   ${COMM_INCLUDE}/StiBel/Common/include)
SET(STIBEL_MYSQL_INCLUDE    ${COMM_INCLUDE}/StiBel/Data/MySQL/include ${MYQSL_INCLUDE})
SET(STIBEL_REDIS_INCLUDE    ${COMM_INCLUDE}/StiBel/Data/Redis/include ${REDIS_INCLUDE})
SET(STIBEL_LOG_INCLUDE      ${COMM_INCLUDE}/StiBel/Log/include)
SET(STIBEL_JSON_INCLUDE     ${COMM_INCLUDE}/StiBel/JSON/include)
SET(STIBEL_XML_INCLUDE      ${COMM_INCLUDE}/StiBel/XML/include)
SET(STIBEL_YAML_INCLUDE     ${COMM_INCLUDE}/StiBel/YAML/include)

## 自封装应用库的头文件集合
set(COMM_INCLUDE_PATH ${STIBEL_COMMON_INCLUDE} ${STIBEL_MYSQL_INCLUDE} ${STIBEL_REDIS_INCLUDE} 
${STIBEL_LOG_INCLUDE} ${STIBEL_JSON_INCLUDE} ${STIBEL_XML_INCLUDE} ${STIBEL_YAML_INCLUDE})

MESSAGE (STATUS "COMM_INCLUDE_PATH:       " ${COMM_INCLUDE_PATH})

## 设置自封装应用库的链接名称，便于快速使用
SET(LIB_STIBEL_COMMON   StiBel_common_${LIB_VERSION} ${LIB_PTHREAD} ${LIB_JSONCPP} ${LIB_YAMLCPP} ${LIB_TINYXML})
SET(LIB_STIBEL_MYSQL    StiBel_mysql_${LIB_VERSION}  ${LIB_MYSQL} )
SET(LIB_STIBEL_REDIS    StiBel_redis_${LIB_VERSION}  ${LIB_HIREDIS})
SET(LIB_STIBEL_LOG      StiBel_log_${LIB_VERSION}    ${LIB_LOG4CPP} ${LIB_PTHREAD})
SET(LIB_STIBEL_JSON     StiBel_json_${LIB_VERSION}   ${LIB_JSONCPP})
SET(LIB_STIBEL_XML      StiBel_xml_${LIB_VERSION}    ${LIB_TINYXML})
SET(LIB_STIBEL_YAML     StiBel_yaml_${LIB_VERSION}   ${LIB_YAMLCPP})

## 自封装应用库名列表，便于快速使用
set(COMM_LIB_LIST ${LIB_STIBEL_COMMON} ${LIB_STIBEL_MYSQL} ${LIB_STIBEL_REDIS} 
${LIB_STIBEL_LOG} ${LIB_STIBEL_JSON} ${LIB_STIBEL_XML} ${LIB_STIBEL_YAML})

MESSAGE (STATUS "COMM_LIB_LIST:       " ${COMM_LIB_LIST})

MESSAGE (STATUS "comlib set begin")